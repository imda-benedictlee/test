<testsuites id="" name="" tests="53" failures="21" skipped="0" errors="0" time="4.140641999999993">
<testsuite name="graphql/project/mutations.spec.js" timestamp="1684299388112" hostname="" tests="25" failures="12" skipped="0" time="1.357" errors="0">
<testcase name="Get Project Get Projects" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Projects" time="0.146">
<properties>
<property name="testrail_case_field">
<![CDATA[preconds:Test Pre-conditions]]>
</property>
<property name="testrail_result_field">
<![CDATA[version:AI Verify 1.0.0]]>
</property>
</properties>
<failure message="queries.spec.js:51:3 Get Projects" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/queries.spec.js:51:3 › Get Project › Get Projects ===================

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Test"
    Received: "Project 0.5556825671061696"

      65 |
      66 |     // Assert Response
    > 67 |     expect(output[0].projectInfo.name).toBe(projectInfoObj[0].projectInfo.name)
         |                                        ^
      68 |     expect(output[0].projectInfo.description).toBe(projectInfoObj[0].projectInfo.description)
      69 |     expect(output[0].projectInfo.reportTitle).toBe(projectInfoObj[0].projectInfo.reportTitle)
      70 |     expect(output[0].projectInfo.company).toBe(projectInfoObj[0].projectInfo.company)

        at /home/benflop/GitHub/test/js/tests/graphql/project/queries.spec.js:67:40
]]>
</failure>
</testcase>
<testcase name="Get Project Get Project By Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Project ID" time="0.103">
<failure message="queries.spec.js:78:3 Get Project By Project ID" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/queries.spec.js:78:3 › Get Project › Get Project By Project ID ======

    TypeError: Cannot read properties of null (reading 'projectInfo')

      93 |
      94 |     // Assert Response
    > 95 |     expect(output.projectInfo.name).toBe(projectInfoObj.projectInfo.name)
         |                   ^
      96 |     expect(output.projectInfo.description).toBe(projectInfoObj.projectInfo.description)
      97 |     expect(output.projectInfo.reportTitle).toBe(projectInfoObj.projectInfo.reportTitle)
      98 |     expect(output.projectInfo.company).toBe(projectInfoObj.projectInfo.company)

        at /home/benflop/GitHub/test/js/tests/graphql/project/queries.spec.js:95:19
]]>
</failure>
</testcase>
<testcase name="Get Project Get Project By Invalid Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Invalid Project ID" time="0.072">
</testcase>
<testcase name="Get Project Get Project By Empty Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Empty Project ID" time="0.059">
</testcase>
<testcase name="Get Reports Get Report By Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Project ID" time="0.102">
<failure message="queries.spec.js:137:3 Get Report By Project ID" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/queries.spec.js:137:3 › Get Reports › Get Report By Project ID ======

    TypeError: Cannot read properties of null (reading 'report')

      149 |     // Get Report directly from MongoDB
      150 |     const query = { _id: ObjectId("63c9fa927bb6a2b36229fa00") }
    > 151 |     const reportId = (await projects.findOne(query)).report
          |                                                      ^
      152 |
      153 |     const query2 = { _id: ObjectId(reportId) }
      154 |     const reportInfoObj = (await reports.findOne(query2))

        at /home/benflop/GitHub/test/js/tests/graphql/project/queries.spec.js:151:54
]]>
</failure>
</testcase>
<testcase name="Get Reports Get Report By Invalid Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Invalid Project ID" time="0.112">
</testcase>
<testcase name="Get Reports Get Report By Empty Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Empty Project ID" time="0.053">
</testcase>
<testcase name="Create Project Project Created" classname="[chromium] › graphql/project/mutations.spec.js › Create Project › Project Created" time="0.065">
</testcase>
<testcase name="Create Project Project Creation Failed" classname="[chromium] › graphql/project/mutations.spec.js › Create Project › Project Creation Failed" time="0.013">
<failure message="mutations.spec.js:111:5 Project Creation Failed" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:111:5 › Create Project › Project Creation Failed ==

    TypeError: Cannot read properties of undefined (reading '0')

      120 |
      121 |         // Assert Response
    > 122 |         expect(errorMessage[0].extensions.code).toBe('INTERNAL_SERVER_ERROR')
          |                            ^
      123 |     })
      124 |
      125 | })

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:122:28
]]>
</failure>
</testcase>
<testcase name="Update Project Project Updated" classname="[chromium] › graphql/project/mutations.spec.js › Update Project › Project Updated" time="0.022">
<failure message="mutations.spec.js:129:5 Project Updated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:129:5 › Update Project › Project Updated ==========

    TypeError: Cannot read properties of null (reading 'projectInfo')

      143 |         })
      144 |
    > 145 |         const projectInfo = response.data.data.updateProject.projectInfo
          |                                                              ^
      146 |
      147 |         // Get Project Info directly from MongoDB
      148 |         const query = { _id: ObjectId("63be7fc7d43d9b23db71ff30") }

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:145:62
]]>
</failure>
</testcase>
<testcase name="Update Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Update Project › Invalid ID" time="0.049">
</testcase>
<testcase name="Delete Project Project Deleted" classname="[chromium] › graphql/project/mutations.spec.js › Delete Project › Project Deleted" time="0.053">
<failure message="mutations.spec.js:183:5 Project Deleted" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:183:5 › Delete Project › Project Deleted ==========

    ReferenceError: GET_PROJECT_BY_ID is not defined

      192 |
      193 |         const response = await axios.post(ENDPOINT, {
    > 194 |             query: GET_PROJECT_BY_ID,
          |                    ^
      195 |             variables: {
      196 |                 "projectId": "63b5496ac05b0b2df748f46b"
      197 |             }

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:194:20
]]>
</failure>
</testcase>
<testcase name="Delete Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Delete Project › Invalid ID" time="0.015">
</testcase>
<testcase name="Clone Project Project Cloned" classname="[chromium] › graphql/project/mutations.spec.js › Clone Project › Project Cloned" time="0.054">
<failure message="mutations.spec.js:226:5 Project Cloned" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:226:5 › Clone Project › Project Cloned ============

    TypeError: Cannot read properties of null (reading 'projectInfo')

      234 |         })
      235 |
    > 236 |         const projectInfo = response.data.data.cloneProject.projectInfo
          |                                                             ^
      237 |
      238 |         // Get Project Info directly from MongoDB
      239 |         const query = { _id: ObjectId("63be7f0cd43d9b23db71ff27") };

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:236:61
]]>
</failure>
</testcase>
<testcase name="Clone Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Clone Project › Invalid ID" time="0.012">
</testcase>
<testcase name="Generate Report Report Generated" classname="[chromium] › graphql/project/mutations.spec.js › Generate Report › Report Generated" time="0.04">
<failure message="mutations.spec.js:254:5 Report Generated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:254:5 › Generate Report › Report Generated ========

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "ReportGenerated"
    Received: "GeneratingReport"

      271 |         })
      272 |
    > 273 |         expect(generateReport.data.data.generateReport.status).toBe("ReportGenerated")
          |                                                                ^
      274 |
      275 |     })
      276 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:273:64
]]>
</failure>
</testcase>
<testcase name="Generate Report Report Generation In Progress" classname="[chromium] › graphql/project/mutations.spec.js › Generate Report › Report Generation In Progress" time="0.025">
<failure message="mutations.spec.js:277:5 Report Generation In Progress" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:277:5 › Generate Report › Report Generation In Progress 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Unexpected error value: \"Previous report generation still running\""
    Received: "Unexpected error value: \"Invalid project ID\""

      289 |
      290 |         // Assert Response
    > 291 |         expect(errorMessage[0].message).toBe("Unexpected error value: \"Previous report generation still running\"")
          |                                         ^
      292 |
      293 |     })
      294 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:291:41
]]>
</failure>
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Valid Project ID &amp; With Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Valid Project ID &amp; With Report" time="0.077">
<failure message="mutations.spec.js:299:5 Cancel Test Run with Valid Project ID &amp; With Report" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:299:5 › Cancel Test Run › Cancel Test Run with Valid Project ID & With Report 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "ReportGenerated"
    Received: "GeneratingReport"

      330 |
      331 |         // Assert Response
    > 332 |         expect(testRun.status).toBe("ReportGenerated") // need to check status
          |                                ^
      333 |
      334 |     })
      335 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:332:32
]]>
</failure>
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Invalid ID" time="0.054">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Empty ID" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Empty ID" time="0.05">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with No Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with No Report" time="0.053">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Generating Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Generating Report" time="0.097">
<failure message="mutations.spec.js:390:5 Cancel Test Run with Generating Report" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:390:5 › Cancel Test Run › Cancel Test Run with Generating Report 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "ReportGenerated"
    Received: "GeneratingReport"

      421 |
      422 |         // Assert Status
    > 423 |         expect(testRun.status).toBe("ReportGenerated")
          |                                ^
      424 |
      425 |     })
      426 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:423:32
]]>
</failure>
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Running Test" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Running Test" time="0.002">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Pending Test" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Pending Test" time="0.002">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Report Generated" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Report Generated" time="0.027">
<failure message="mutations.spec.js:435:5 Cancel Test Run with Report Generated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:435:5 › Cancel Test Run › Cancel Test Run with Report Generated 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Unexpected error value: \"Report is not generating\""
    Received: "Unexpected error value: \"Report not found\""

      447 |
      448 |         // Assert Response
    > 449 |         expect(errorMessage[0].message).toBe("Unexpected error value: \"Report is not generating\"")
          |                                         ^
      450 |
      451 |     })
      452 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:449:41
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="graphql/project-template/mutations.spec.js" timestamp="1684299388112" hostname="" tests="28" failures="9" skipped="0" time="1.391" errors="0">
<testcase name="Get Project Template Get Project Templates" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Templates" time="0.104">
<failure message="queries.spec.js:177:5 Get Project Templates" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/queries.spec.js:177:5 › Get Project Template › Get Project Templates 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "0"
    Received: "Template 3"

      210 |   
      211 |       // Assert 35th Project Template
    > 212 |       expect(output[35].projectInfo.name).toBe(projectTemplateInfoObj.projectInfo.name)
          |                                           ^
      213 |       expect(output[35].projectInfo.description).toBe(projectTemplateInfoObj.projectInfo.description)
      214 |       expect(output[35].projectInfo.company).toBe(projectTemplateInfoObj.projectInfo.company)
      215 |   

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/queries.spec.js:212:43
]]>
</failure>
</testcase>
<testcase name="Get Project Template Get Project Template by Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Project Template Id" time="0.046">
</testcase>
<testcase name="Get Project Template Get Project Template by Invalid Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Invalid Project Template Id" time="0.021">
</testcase>
<testcase name="Get Project Template Get Project Template by Empty Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Empty Project Template Id" time="0.012">
</testcase>
<testcase name="Create Project Template Create Project Template with Valid Inputs" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Valid Inputs" time="0.111">
</testcase>
<testcase name="Create Project Template Create Project Template with NULL Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with NULL Project Information" time="0.096">
<failure message="mutations.spec.js:196:5 Create Project Template with NULL Project Information" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:196:5 › Create Project Template › Create Project Template with NULL Project Information 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Cannot return null for non-nullable field ProjectInformation.name."
    Received: "Unexpected error value: \"Missing variable\""

      230 |
      231 |         // Assert Response
    > 232 |         expect(errorMessage[0].message).toBe("Cannot return null for non-nullable field ProjectInformation.name.")
          |                                         ^
      233 |
      234 |         // Get New Count of Records
      235 |         const newCount = await projects.countDocuments()

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:232:41
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Integer Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Integer Project Information" time="0.086">
<failure message="mutations.spec.js:242:5 Create Project Template with Integer Project Information" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:242:5 › Create Project Template › Create Project Template with Integer Project Information 

    TypeError: Cannot read properties of undefined (reading '0')

      276 |
      277 |         // Assert Response
    > 278 |         expect(errorMessage[0].message).toBe("Variable \"$projectTemplate\" got invalid value 0 at \"projectTemplate.projectInfo.name\"; String cannot represent a non string value: 0")
          |                            ^
      279 |         expect(errorMessage[1].message).toBe("Variable \"$projectTemplate\" got invalid value 0 at \"projectTemplate.projectInfo.description\"; String cannot represent a non string value: 0")
      280 |         expect(errorMessage[2].message).toBe("Variable \"$projectTemplate\" got invalid value 0 at \"projectTemplate.projectInfo.reportTitle\"; String cannot represent a non string value: 0")
      281 |         expect(errorMessage[3].message).toBe("Variable \"$projectTemplate\" got invalid value 0 at \"projectTemplate.projectInfo.company\"; String cannot represent a non string value: 0")

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:278:28
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Project Information" time="0.082">
<failure message="mutations.spec.js:291:5 Create Project Template with Empty Project Information" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:291:5 › Create Project Template › Create Project Template with Empty Project Information 

    TypeError: Cannot read properties of undefined (reading 'createProjectTemplate')

      323 |
      324 |         // FIXME JIRA 185
    > 325 |         const projectTemplateInfo = response.data.data.createProjectTemplate
          |                                                        ^
      326 |         const projectTemplateId = projectTemplateInfo.id
      327 |
      328 |         // Get Project Info directly from MongoDB

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:325:56
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Invalid Global Variable" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Invalid Global Variable" time="0.058">
<failure message="mutations.spec.js:346:5 Create Project Template with Invalid Global Variable" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:346:5 › Create Project Template › Create Project Template with Invalid Global Variable 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Variable \"$projectTemplate\" got invalid value null at \"projectTemplate.globalVars.key\"; Expected non-nullable type \"String!\" not to be null."
    Received: "Variable \"$projectTemplate\" got invalid value null at \"projectTemplate.globalVars.key\"; Expected non-nullable type \"key_String_NotNull_minLength_1_maxLength_128!\" not to be null."

      375 |
      376 |         // Assert Response
    > 377 |         expect(errorMessage[0].message).toBe("Variable \"$projectTemplate\" got invalid value null at \"projectTemplate.globalVars.key\"; Expected non-nullable type \"String!\" not to be null.")
          |                                         ^
      378 |         expect(errorMessage[1].message).toBe("Variable \"$projectTemplate\" got invalid value null at \"projectTemplate.globalVars.value\"; Expected non-nullable type \"String!\" not to be null.")
      379 |
      380 |         // Test For Integer Global Variables

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:377:41
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Global Variable" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Global Variable" time="0.062">
<failure message="mutations.spec.js:407:5 Create Project Template with Empty Global Variable" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:407:5 › Create Project Template › Create Project Template with Empty Global Variable 

    TypeError: Cannot read properties of undefined (reading 'createProjectTemplate')

      436 |         const errorMessage = response.data.errors
      437 |
    > 438 |         const projectTemplateInfo = response.data.data.createProjectTemplate
          |                                                        ^
      439 |         const projectTemplateId = projectTemplateInfo.id
      440 |
      441 |         // Get Project Info directly from MongoDB

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:438:56
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Invalid Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Invalid Pages" time="0.092">
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Pages" time="0.12">
<failure message="mutations.spec.js:601:5 Create Project Template with Empty Pages" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:601:5 › Create Project Template › Create Project Template with Empty Pages 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 117
    Received: 119

      668 |
      669 |         // Assert Record Counts
    > 670 |         expect(newCount).toEqual(currentCount)
          |                          ^
      671 |
      672 |     })
      673 | })

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:670:26
]]>
</failure>
</testcase>
<testcase name="Clone Project Template Clone Project Template by Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Clone Project Template › Clone Project Template by Project Template ID" time="0.049">
</testcase>
<testcase name="Clone Project Template Clone Project Template by Invalid Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Clone Project Template › Clone Project Template by Invalid Project Template ID" time="0.03">
</testcase>
<testcase name="Clone Project Template Clone Project Template by Empty Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Clone Project Template › Clone Project Template by Empty Project Template ID" time="0.046">
<failure message="mutations.spec.js:777:5 Clone Project Template by Empty Project Template ID" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:777:5 › Clone Project Template › Clone Project Template by Empty Project Template ID 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 121
    Received: 122

      797 |
      798 |         // Assert Record Counts
    > 799 |         expect(newCount).toEqual(currentCount)
          |                          ^
      800 |     })
      801 |
      802 | })

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:799:26
]]>
</failure>
</testcase>
<testcase name="Delete Project Template Delete Project Template by Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Project Template ID" time="0.009">
</testcase>
<testcase name="Delete Project Template Delete Project Template by Invalid Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Invalid Project Template ID" time="0.027">
</testcase>
<testcase name="Delete Project Template Delete Project Template by Empty Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Empty Project Template ID" time="0.014">
</testcase>
<testcase name="Update Project Template Update Project Template by Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template by Project Template ID" time="0.021">
</testcase>
<testcase name="Update Project Template Update Project Template with Invalid Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Invalid Project Template ID" time="0.043">
</testcase>
<testcase name="Update Project Template Update Project Template with Empty Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Empty Project Template ID" time="0.017">
</testcase>
<testcase name="Update Project Template Update Project Template with Valid Inputs" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Valid Inputs" time="0.034">
</testcase>
<testcase name="Update Project Template Update Project Template with Invalid Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Invalid Project Information" time="0.039">
</testcase>
<testcase name="Update Project Template Update Project Template with Empty Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Empty Project Information" time="0.017">
</testcase>
<testcase name="Update Project Template Update Project Template with Invalid Global Variables" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Invalid Global Variables" time="0.04">
<failure message="mutations.spec.js:1252:5 Update Project Template with Invalid Global Variables" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:1252:5 › Update Project Template › Update Project Template with Invalid Global Variables 

    TypeError: Cannot read properties of undefined (reading '0')

      1301 |
      1302 |         //Assert Response
    > 1303 |         expect(errorMessage[0].message).toBe("Variable \"$projectTemplate\" got invalid value \"\" at \"projectTemplate.globalVars[0].key\"; Expected type \"key_String_NotNull_minLength_1_maxLength_128\". Must be at least 1 characters in length")
           |                            ^
      1304 |         expect(errorMessage[1].message).toBe("Variable \"$projectTemplate\" got invalid value \"\" at \"projectTemplate.globalVars[0].key\"; Expected type \"key_String_NotNull_minLength_1_maxLength_128\". Must be at least 1 characters in length")
      1305 |
      1306 |         // Get Project Template Info directly from MongoDB

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:1303:28
]]>
</failure>
</testcase>
<testcase name="Update Project Template Update Project Template with Empty Global Variables" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Empty Global Variables" time="0.043">
</testcase>
<testcase name="Update Project Template Update Project Template with Invalid Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Invalid Pages" time="0.022">
</testcase>
<testcase name="Update Project Template Update Project Template with Empty Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template › Update Project Template with Empty Pages" time="0.05">
</testcase>
</testsuite>
</testsuites>