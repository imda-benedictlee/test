<testsuites id="" name="" tests="42" failures="16" skipped="3" errors="0" time="1.9000409999999683">
<testsuite name="graphql/project/mutations.spec.js" timestamp="1678107325927" hostname="" tests="25" failures="9" skipped="0" time="0.874" errors="0">
<testcase name="Get Project Get Projects" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Projects" time="0.097">
</testcase>
<testcase name="Get Project Get Project By Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Project ID" time="0.052">
<failure message="queries.spec.js:75:3 Get Project By Project ID" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/queries.spec.js:75:3 › Get Project › Get Project By Project ID ======

    TypeError: Cannot read properties of null (reading 'projectInfo')

      90 |
      91 |     // Assert Response
    > 92 |     expect(output.projectInfo.name).toBe(projectInfoObj.projectInfo.name)
         |                   ^
      93 |     expect(output.projectInfo.description).toBe(projectInfoObj.projectInfo.description)
      94 |     expect(output.projectInfo.reportTitle).toBe(projectInfoObj.projectInfo.reportTitle)
      95 |     expect(output.projectInfo.company).toBe(projectInfoObj.projectInfo.company)

        at /home/benflop/GitHub/test/js/tests/graphql/project/queries.spec.js:92:19
]]>
</failure>
</testcase>
<testcase name="Get Project Get Project By Invalid Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Invalid Project ID" time="0.03">
</testcase>
<testcase name="Get Project Get Project By Empty Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Project › Get Project By Empty Project ID" time="0.056">
</testcase>
<testcase name="Get Reports Get Report By Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Project ID" time="0.059">
<failure message="queries.spec.js:134:3 Get Report By Project ID" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/queries.spec.js:134:3 › Get Reports › Get Report By Project ID ======

    TypeError: Cannot read properties of null (reading 'report')

      146 |     // Get Report directly from MongoDB
      147 |     const query = { _id: ObjectId("63c9fa927bb6a2b36229fa00") }
    > 148 |     const reportId = (await projects.findOne(query)).report
          |                                                      ^
      149 |
      150 |     const query2 = { _id: ObjectId(reportId) }
      151 |     const reportInfoObj = (await reports.findOne(query2))

        at /home/benflop/GitHub/test/js/tests/graphql/project/queries.spec.js:148:54
]]>
</failure>
</testcase>
<testcase name="Get Reports Get Report By Invalid Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Invalid Project ID" time="0.091">
</testcase>
<testcase name="Get Reports Get Report By Empty Project ID" classname="[chromium] › graphql/project/queries.spec.js › Get Reports › Get Report By Empty Project ID" time="0.033">
</testcase>
<testcase name="Create Project Project Created" classname="[chromium] › graphql/project/mutations.spec.js › Create Project › Project Created" time="0.038">
</testcase>
<testcase name="Create Project Project Creation Failed" classname="[chromium] › graphql/project/mutations.spec.js › Create Project › Project Creation Failed" time="0.028">
<failure message="mutations.spec.js:111:5 Project Creation Failed" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:111:5 › Create Project › Project Creation Failed ==

    TypeError: Cannot read properties of undefined (reading '0')

      120 |
      121 |         // Assert Response
    > 122 |         expect(errorMessage[0].extensions.code).toBe('INTERNAL_SERVER_ERROR')
          |                            ^
      123 |     })
      124 |
      125 | })

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:122:28
]]>
</failure>
</testcase>
<testcase name="Update Project Project Updated" classname="[chromium] › graphql/project/mutations.spec.js › Update Project › Project Updated" time="0.029">
<failure message="mutations.spec.js:129:5 Project Updated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:129:5 › Update Project › Project Updated ==========

    TypeError: Cannot read properties of null (reading 'projectInfo')

      143 |         })
      144 |
    > 145 |         const projectInfo = response.data.data.updateProject.projectInfo
          |                                                              ^
      146 |
      147 |         // Get Project Info directly from MongoDB
      148 |         const query = { _id: ObjectId("63be7fc7d43d9b23db71ff30") }

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:145:62
]]>
</failure>
</testcase>
<testcase name="Update Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Update Project › Invalid ID" time="0.036">
</testcase>
<testcase name="Delete Project Project Deleted" classname="[chromium] › graphql/project/mutations.spec.js › Delete Project › Project Deleted" time="0.022">
<failure message="mutations.spec.js:183:5 Project Deleted" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:183:5 › Delete Project › Project Deleted ==========

    ReferenceError: GET_PROJECT_BY_ID is not defined

      192 |
      193 |         const response = await axios.post(ENDPOINT, {
    > 194 |             query: GET_PROJECT_BY_ID,
          |                    ^
      195 |             variables: {
      196 |                 "projectId": "63b5496ac05b0b2df748f46b"
      197 |             }

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:194:20
]]>
</failure>
</testcase>
<testcase name="Delete Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Delete Project › Invalid ID" time="0.038">
</testcase>
<testcase name="Clone Project Project Cloned" classname="[chromium] › graphql/project/mutations.spec.js › Clone Project › Project Cloned" time="0.006">
<failure message="mutations.spec.js:226:5 Project Cloned" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:226:5 › Clone Project › Project Cloned ============

    TypeError: Cannot read properties of null (reading 'projectInfo')

      234 |         })
      235 |
    > 236 |         const projectInfo = response.data.data.cloneProject.projectInfo
          |                                                             ^
      237 |
      238 |         // Get Project Info directly from MongoDB
      239 |         const query = { _id: ObjectId("63be7f0cd43d9b23db71ff27") };

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:236:61
]]>
</failure>
</testcase>
<testcase name="Clone Project Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Clone Project › Invalid ID" time="0.001">
</testcase>
<testcase name="Generate Report Report Generated" classname="[chromium] › graphql/project/mutations.spec.js › Generate Report › Report Generated" time="0.05">
<failure message="mutations.spec.js:254:5 Report Generated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:254:5 › Generate Report › Report Generated ========

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "ReportGenerated"
    Received: "GeneratingReport"

      271 |         })
      272 |
    > 273 |         expect(generateReport.data.data.generateReport.status).toBe("ReportGenerated")
          |                                                                ^
      274 |
      275 |     })
      276 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:273:64
]]>
</failure>
</testcase>
<testcase name="Generate Report Report Generation In Progress" classname="[chromium] › graphql/project/mutations.spec.js › Generate Report › Report Generation In Progress" time="0.013">
<failure message="mutations.spec.js:277:5 Report Generation In Progress" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:277:5 › Generate Report › Report Generation In Progress 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Unexpected error value: \"Previous report generation still running\""
    Received: "Unexpected error value: \"Invalid project ID\""

      289 |
      290 |         // Assert Response
    > 291 |         expect(errorMessage[0].message).toBe("Unexpected error value: \"Previous report generation still running\"")
          |                                         ^
      292 |
      293 |     })
      294 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:291:41
]]>
</failure>
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Valid Project ID &amp; With Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Valid Project ID &amp; With Report" time="0.041">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Invalid ID" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Invalid ID" time="0.005">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Empty ID" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Empty ID" time="0.04">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with No Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with No Report" time="0.009">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Generating Report" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Generating Report" time="0.087">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Running Test" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Running Test" time="0.001">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Pending Test" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Pending Test" time="0.001">
</testcase>
<testcase name="Cancel Test Run Cancel Test Run with Report Generated" classname="[chromium] › graphql/project/mutations.spec.js › Cancel Test Run › Cancel Test Run with Report Generated" time="0.011">
<failure message="mutations.spec.js:435:5 Cancel Test Run with Report Generated" type="FAILURE">
<![CDATA[  [chromium] › graphql/project/mutations.spec.js:435:5 › Cancel Test Run › Cancel Test Run with Report Generated 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: "Unexpected error value: \"Report is not generating\""
    Received: "Unexpected error value: \"Report not found\""

      447 |
      448 |         // Assert Response
    > 449 |         expect(errorMessage[0].message).toBe("Unexpected error value: \"Report is not generating\"")
          |                                         ^
      450 |
      451 |     })
      452 |

        at /home/benflop/GitHub/test/js/tests/graphql/project/mutations.spec.js:449:41
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="graphql/project-template/mutations.spec.js" timestamp="1678107325927" hostname="" tests="17" failures="7" skipped="3" time="0.453" errors="0">
<testcase name="Get Project Template Get Project Templates" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Templates" time="0.001">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Get Project Template Get Project Template by Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Project Template Id" time="0.039">
</testcase>
<testcase name="Get Project Template Get Project Template by Invalid Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Invalid Project Template Id" time="0.013">
</testcase>
<testcase name="Get Project Template Get Project Template by Empty Project Template Id" classname="[chromium] › graphql/project-template/queries.spec.js › Get Project Template › Get Project Template by Empty Project Template Id" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Create Project Template Create Project Template with Valid Inputs" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Valid Inputs" time="0.039">
</testcase>
<testcase name="Create Project Template Create Project Template with NULL Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with NULL Project Information" time="0.075">
<failure message="mutations.spec.js:196:5 Create Project Template with NULL Project Information" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:196:5 › Create Project Template › Create Project Template with NULL Project Information 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 96
    Received: 97

      236 |
      237 |         //Assert Record Counts
    > 238 |         expect(newCount).toEqual(currentCount)
          |                          ^
      239 |
      240 |     })
      241 |

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:238:26
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Integer Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Integer Project Information" time="0.009">
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Project Information" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Project Information" time="0.012">
<failure message="mutations.spec.js:291:5 Create Project Template with Empty Project Information" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:291:5 › Create Project Template › Create Project Template with Empty Project Information 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 92
    Received: 93

      340 |
      341 |         // Assert Record Counts
    > 342 |         expect(newCount).toEqual(currentCount)
          |                          ^
      343 |
      344 |     })
      345 |

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:342:26
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Invalid Global Variable" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Invalid Global Variable" time="0.079">
<failure message="mutations.spec.js:346:5 Create Project Template with Invalid Global Variable" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:346:5 › Create Project Template › Create Project Template with Invalid Global Variable 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 99
    Received: 100

      401 |
      402 |         // Assert Record Counts
    > 403 |         expect(newCount).toEqual(currentCount)
          |                          ^
      404 |
      405 |     })
      406 |

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:403:26
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Global Variable" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Global Variable" time="0.036">
<failure message="mutations.spec.js:407:5 Create Project Template with Empty Global Variable" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:407:5 › Create Project Template › Create Project Template with Empty Global Variable 

    TypeError: Cannot read properties of null (reading 'globalVars')

      444 |
      445 |         // Assert Response
    > 446 |         expect(projectTemplateInfo.globalVars.key).toBe(projectTemplateInfoObj.globalVars.key)
          |                                                                                ^
      447 |         expect(projectTemplateInfo.globalVars.value).toBe(projectTemplateInfoObj.globalVars.value)
      448 |
      449 |         // Get New Count of Records

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:446:80
]]>
</failure>
</testcase>
<testcase name="Create Project Template Create Project Template with Invalid Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Invalid Pages" time="0">
<properties>
<property name="skip" value="">
</property>
</properties>
<skipped>
</skipped>
</testcase>
<testcase name="Create Project Template Create Project Template with Empty Pages" classname="[chromium] › graphql/project-template/mutations.spec.js › Create Project Template › Create Project Template with Empty Pages" time="0.066">
<failure message="mutations.spec.js:601:5 Create Project Template with Empty Pages" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:601:5 › Create Project Template › Create Project Template with Empty Pages 

    Error: expect(received).toEqual(expected) // deep equality

    Expected: 100
    Received: 101

      668 |
      669 |         // Assert Record Counts
    > 670 |         expect(newCount).toEqual(currentCount)
          |                          ^
      671 |
      672 |     })
      673 | })

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:670:26
]]>
</failure>
</testcase>
<testcase name="Clone Project Template" classname="[chromium] › graphql/project-template/mutations.spec.js › Clone Project Template" time="0.003">
<failure message="mutations.spec.js:675:1 Clone Project Template" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:675:1 › Clone Project Template ===========

    Error: tests/graphql/project-template/mutations.spec.js:680:10: Playwright Test did not expect test.beforeAll() to be called here.
    Most common reasons include:
    - You are calling test.beforeAll() in a configuration file.
    - You are calling test.beforeAll() in a file that is imported by the configuration file.
    - You have two different versions of @playwright/test. This usually happens
      when one of the dependencies in your package.json depends on @playwright/test.

      678 |     let projectTemplate
      679 |
    > 680 |     test.beforeAll(async () => {
          |          ^
      681 |
      682 |         const response = await axios.post(ENDPOINT, {
      683 |             query: CREATE_PROJECT_TEMPLATE,

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:680:10
]]>
</failure>
</testcase>
<testcase name="Delete Project Template Delete Project Template by Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Project Template ID" time="0.031">
</testcase>
<testcase name="Delete Project Template Delete Project Template by Invalid Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Invalid Project Template ID" time="0.028">
</testcase>
<testcase name="Delete Project Template Delete Project Template by Empty Project Template ID" classname="[chromium] › graphql/project-template/mutations.spec.js › Delete Project Template › Delete Project Template by Empty Project Template ID" time="0.013">
</testcase>
<testcase name="Update Project Template" classname="[chromium] › graphql/project-template/mutations.spec.js › Update Project Template" time="0.009">
<failure message="mutations.spec.js:930:1 Update Project Template" type="FAILURE">
<![CDATA[  [chromium] › graphql/project-template/mutations.spec.js:930:1 › Update Project Template ==========

    Error: tests/graphql/project-template/mutations.spec.js:935:10: Playwright Test did not expect test.beforeAll() to be called here.
    Most common reasons include:
    - You are calling test.beforeAll() in a configuration file.
    - You are calling test.beforeAll() in a file that is imported by the configuration file.
    - You have two different versions of @playwright/test. This usually happens
      when one of the dependencies in your package.json depends on @playwright/test.

      933 |     let projectTemplate
      934 |
    > 935 |     test.beforeAll(async () => {
          |          ^
      936 |
      937 |         const response = await axios.post(ENDPOINT, {
      938 |             query: CREATE_PROJECT_TEMPLATE,

        at /home/benflop/GitHub/test/js/tests/graphql/project-template/mutations.spec.js:935:10
]]>
</failure>
</testcase>
</testsuite>
</testsuites>